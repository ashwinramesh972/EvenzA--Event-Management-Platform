# Generated by Django 5.2 on 2025-05-26 08:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('App_Event', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{3}$', 'Currency must be a valid 3-letter ISO 4217 code.')])),
                ('payment_type', models.CharField(choices=[('event_ticket', 'Event Ticket'), ('subscription', 'Subscription'), ('cancellation_fee', 'Cancellation Fee')], default='event_ticket', max_length=20, null=True)),
                ('stripe_payment_intent_id', models.CharField(max_length=100, null=True, unique=True)),
                ('stripe_client_secret', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(choices=[('requires_payment_method', 'Requires Payment Method'), ('requires_confirmation', 'Requires Confirmation'), ('requires_action', 'Requires Action'), ('processing', 'Processing'), ('requires_capture', 'Requires Capture'), ('canceled', 'Canceled'), ('succeeded', 'Succeeded')], default='requires_payment_method', max_length=30, null=True)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Payment Intent',
                'verbose_name_plural': 'Payment Intents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(choices=[('free', 'Joiner (Free)'), ('creator', 'Creator'), ('premium', 'Premium')], max_length=20, null=True)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=10, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('canceled', 'Canceled'), ('past_due', 'Past Due'), ('trialing', 'Trialing'), ('unpaid', 'Unpaid')], default='active', max_length=20, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('current_period_end', models.DateTimeField(help_text='When the current billing period ends', null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount in default currency', max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', help_text='Three-letter currency code (e.g., USD, EUR, GBP)', max_length=3, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{3}$', 'Currency must be a valid 3-letter ISO 4217 code.')])),
                ('payment_type', models.CharField(choices=[('event_ticket', 'Event Ticket'), ('subscription', 'Subscription'), ('cancellation_fee', 'Cancellation Fee')], default='event_ticket', help_text='Type of payment (event ticket, subscription, etc.)', max_length=20, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer')], help_text='Method used for the payment', max_length=20, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the payment', max_length=20, null=True)),
                ('transaction_id', models.CharField(blank=True, help_text='External payment processor transaction ID', max_length=100, null=True, unique=True)),
                ('processor_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Fee charged by payment processor', max_digits=10, null=True)),
                ('platform_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Fee charged by your platform', max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, help_text='Additional payment data in JSON format', null=True)),
                ('refunded_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount refunded to customer', max_digits=10, null=True)),
                ('refund_transaction_id', models.CharField(blank=True, help_text='Transaction ID for the refund', max_length=100, null=True)),
                ('refund_reason', models.TextField(blank=True, help_text='Reason for refund', null=True)),
                ('refunded_at', models.DateTimeField(blank=True, help_text='When the refund was processed', null=True)),
                ('event', models.ForeignKey(blank=True, help_text='Event associated with this payment. Can be null for subscription payments.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='App_Event.event')),
                ('event_participant', models.ForeignKey(blank=True, help_text='Event participant record associated with this payment.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='App_Event.eventparticipant')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
    ]
